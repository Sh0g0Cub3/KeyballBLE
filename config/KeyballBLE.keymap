#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E    &kp R    &kp T                                           &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D    &lt 6 F  &kp G         &mo 6            &mo 7            &kp H        &kp J  &kp K      &kp L    &lt 6 SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C    &kp V    &kp B         &kp ESCAPE       &lt 5 LG(SPACE)  &kp N        &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp TAB  &mo 2    &kp LEFT_GUI  &lt 4 SPACE      &lt 3 LC(SPACE)  &lt 1 ENTER                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Arrow {
            bindings = <
&kp ESCAPE  &none   &none             &kp LA(LG(LEFT_ARROW))  &kp LA(LG(RIGHT_ARROW))                        &kp C_VOLUME_DOWN  &kp LC(LG(LEFT_BRACKET))  &kp LC(LG(SPACE))  &kp LC(LG(RIGHT_BRACKET))  &kp C_VOLUME_UP
&none       &none   &none             &none                   &none                    &none       &kp HOME  &kp LEFT_ARROW     &kp DOWN_ARROW            &kp UP_ARROW       &kp RIGHT_ARROW            &kp LC(LG(C))
&none       &none   &kp LG(NUMBER_0)  &kp LG(MINUS)           &kp LG(EQUAL)            &none       &kp END   &kp LA(LC(SPACE))  &kp LS(LA(LC(SPACE)))     &kp LS(LA(J))      &none                      &none
&trans      &trans  &trans            &trans                  &trans                   &trans      &trans    &trans                                                                                     &trans
            >;
        };

        Symbol {
            bindings = <
&kp LS(TILDE)  &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)                          &kp LS(LPAR)  &kp LS(RPAR)  &kp BACKSLASH  &none       &none
&kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(UNDER)  &kp GRAVE      &none   &kp LBKT      &kp RBKT      &kp LS(PIPE)   &none       &none
&kp LS(DQT)    &kp SQT        &kp EQUAL     &kp LS(PLUS)   &kp MINUS      &none          &none   &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(LT)     &kp LS(GT)  &none
&trans         &trans         &trans        &trans         &trans         &trans         &trans  &trans                                                 &trans
            >;
        };

        Num {
            bindings = <
&none   &none   &none   &none   &none                       &kp MINUS      &kp N7  &kp N8  &kp N9  &none
&none   &none   &none   &none   &none   &none       &none   &kp LS(COLON)  &kp N4  &kp N5  &kp N6  &kp LS(STAR)
&none   &none   &none   &none   &none   &none       &kp N0  &kp DOT        &kp N1  &kp N2  &kp N3  &kp FSLH
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        Display {
            bindings = <
&none   &kp LA(LC(N))      &kp LA(LC(C))      &kp LA(LC(E))      &kp LA(LC(M))                                     &kp LC(UP_ARROW)        &kp LC(LG(U))       &kp LC(LG(I))  &none                    &none
&none   &kp LA(LC(T))      &kp LA(LC(S))      &kp LA(LC(B))      &kp LA(LC(F))      &none       &none              &kp LC(LG(LEFT_ARROW))  &kp LC(LG(J))       &kp LC(LG(K))  &kp LC(LG(RIGHT_ARROW))  &kp LS(LC(LG(J)))
&none   &kp LS(LA(LC(F)))  &kp LS(LA(LC(S)))  &kp LS(LA(LC(P)))  &kp LS(LA(LC(D)))  &none       &none              &kp LC(LG(COMMA))       &kp LC(LG(PERIOD))  &none          &none                    &none
&trans  &trans             &trans             &trans             &trans             &trans      &kp LC(LG(ENTER))  &kp LC(LG(T))                                                                       &trans
            >;
        };

        Function {
            bindings = <
&none   &none   &none          &none              &none                                     &kp F1  &kp F2   &kp F3   &kp F4   &kp LC(LG(P))
&none   &none   &none          &kp LC(LG(R))      &kp LC(LG(M))  &none              &none   &kp F5  &kp F6   &kp F7   &kp F8   &none
&none   &none   &kp LC(LG(P))  &kp LC(LG(LS(B)))  &kp LC(LG(B))  &none              &none   &kp F9  &kp F10  &kp F11  &kp F12  &none
&trans  &trans  &trans         &kp LC(LG(S))      &kp LC(LG(V))  &kp LG(SPACE)      &trans  &trans                             &trans
            >;
        };

        Mouse {
            bindings = <
&none   &none   &none   &none   &none                                     &none                  &none      &none  &none      &none
&none   &none   &none   &none   &none   &none       &none                 &none                  &mkp LCLK  &none  &mkp RCLK  &none
&none   &none   &none   &none   &none   &none       &none                 &kp LS(LG(NUMBER_2))   &none      &none  &none      &none
&trans  &trans  &trans  &trans  &trans  &trans      &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)                               &trans
            >;
        };

        Bluetooth {
            bindings = <
&none  &none  &none  &none  &none                             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &none      &studio_unlock  &none         &none         &none         &none         &none
&none  &none  &none  &none  &none  &none      &bootloader     &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none      &none           &none                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
